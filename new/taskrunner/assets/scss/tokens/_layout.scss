
// Width of the central column
$global-width: 72rem;

// All variables prefixed with "rr" are used to
// set defaults for the root-rhythm sass module.
$rr-max-width: $global-width;

// 1 rem is divided into this many segments to
// make a grid square. at 2, that means each
// grid is .5rem x .5rem.
$rr-grid-divisions: 2;

// These grid settings configure the grid at
// different breakpoints and also specify the
// breaks used by rr-break-directive() -- the
// sass mixin that creates media queries.
//
// "Grid" here means a typographic / layout
// grid, not CSS3 Grids.
//
// rr-break-directive is the preferred method
// for making breakpoints; a close alternative
// is looking the breakpoint values up here.
// If necessary you can write one manually,
// but then those will need to be found and
// tweaked by hand if there are revisions.
$rr-grid-settings: (
  s: (
    mq: max-width,
    size: 35rem,
    columns: 4,
    gutter: calc(1rem / $rr-grid-divisions),
    offset: 1rem,
    vspace: 2,
    column_color: rgba(200, 200, 255, .2),
    baseline_color: rgba(128, 128, 200, .2)
  ),
  m: (
    mq: min-width,
    size: 35rem,
    gutter: 1rem,
    columns: 8,
    offset: 2rem,
    vspace: 3, //  21px / 42px
    column_color: rgba(255, 200, 200, .2),
    baseline_color: rgba(128, 128, 200, .2)
  ),
  l: (
    size: 58rem,
    columns: 12,
    column_color: rgba(128, 255, 200, .2),
    baseline_color: rgba(128, 128, 200, .2)
  ),
  xl: (
    size: $global-width + 4rem,
    offset: 0,
    gutter: 2rem, //36px
    vspace: 5, // (36px / 72px)
    column_color: rgba(200, 128, 255, .2),
    baseline_color: rgba(128, 128, 200, .2)
  ),
  xlp: (
    size: $global-width + 8rem
  )
);

// This configures the CSS3 grid layout as well
// as the flex fallbacks for IE11. Configuration
// is provided through 6-up, but 3-up is the most
// content-friendly maxium.
//
// The m/l/xl breakpoints match the breakpoints
// in rr-grid-settings above, and control
// layout at those breakpoints.
//
// You can add new configurations just by following
// the pattern below.
$rr-grids: (
  2-up: (
    m: (
      columns: 2,
    )
  ),
  3-up: (
    //m: (
    //  columns: 2,
    //),
    l: (
      columns: 3,
    )
  ),
  4-up: (
    m: (
      columns: 2,
    ),
    l: (
      columns: 4,
    )
  ),
  5-up: (
    m: (
      columns: 3,
    ),
    l: (
      columns: 5,
    )
  ),
  6-up: (
    m: (
      columns: 3,
    ),
    l: (
      columns: 4,
    ),
    xl: (
      columns: 6
    )
  ),
  sidebar-left: (
    m: (
      columns: 3,
      areas: side main main,
      flex-areas: (
        side: 33.3%,
        main: 66.6%
      )
    ),
    l: (
      columns: 4,
      areas: side main main main,
      flex-areas: (
        side: 25%,
        main: 75%
      )
    )
  ),
  sidebar-right: (
    m: (
      columns: 3,
      areas: main main side,
      flex-columns: 2,
      flex-areas: (
        side: 33.3%,
        main: 66.6%
      )
    ),
    l: (
      columns: 4,
      areas: main main main side,
      flex-areas: (
        side: 25%,
        main: 75%
      )
    )
  ),
  major-left: (
    m: (
      columns: 2,
      areas: major minor,
      flex-columns: 2,
      flex-areas: (
        minor: 33.3%,
        major: 66.6%
      )
    ),
    l: (
      columns: 3,
      areas: major major minor,
      flex-areas: (
        minor: 33.3%,
        major: 66.6%
      )
    )
  ),
  major-right: (
    m: (
      columns: 2,
      areas: minor major,
      flex-columns: 2,
      flex-areas: (
        minor: 33.3%,
        major: 66.6%
      )
    ),
    l: (
      columns: 3,
      areas: minor major major,
      flex-areas: (
        minor: 33.3%,
        major: 66.6%
      )
    ),
  )
);

