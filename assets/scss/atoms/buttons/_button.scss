@use 'root-rhythm';
@use 'color-functions';
@use 'design-variables';
@use 'colors';
@use 'color-schemes';
@use 'typography';


button,
a.button,
input.button {
  @include root-rhythm.rr-font-compute(l, tight, typography.$fonts, typography.$lineheights);

  //TODO: Review this, this assumes S breakpoint
  // should never get 2-up buttons.
  display: block;
  width: 80%;
  margin:root-rhythm.rr-gridbase(1) auto;

  @include root-rhythm.rr-break-directive(m) {
    display: inline-block;
    width:auto;
    margin: 0;
  }

  //  Avenir is not quite centered in the lineheight
  //  because of weird font metrics, so in order to get
  //  text visibly aligned I have to provide unique padding
  //  values for top and bottom.
  padding: {
    top: calc(1rem - 2px);
    right: calc(1.875rem - 3px);
    bottom: calc(1rem - 4px);
    left: calc(1.875rem - 3px);
  }
  transition: .3s ease-in-out;
  border-width: 2px;
  border-style: solid;
  font-family: typography.$font-usual;
  font-weight: 500;
  text-align: center;
  text-decoration: none;
  text-transform: uppercase;

  $skins: transparent;
  @each $name, $color in colors.$colors {
    &.button--#{""+$name} {
      background-color: $color;
      @if (color-functions.contrast($color, color-functions.color(wildcat-black)) < 4.5) {
        @include design-variables.usescheme(color-schemes.$scheme-dark);
      }

      .heading--display span {
        background-color: $color;
      }
    }
    $skins: append($skins, button--#{$name});
  }

  &.button--ghost {
    background-color: transparent;
  }

  &.button--transparent {
    border-color: transparent;
    background-color: transparent;
    color: color-functions.color(wildcat-blue);
  }

  // Variants
  &.button--small {
    @include root-rhythm.rr-font-compute(s, tight, typography.$fonts, typography.$lineheights);
    padding: {
      right: calc(1.625rem - 3px);
      left: calc(1.625rem - 3px);
    }
  }

  &.button--large {
    @include root-rhythm.rr-font-compute(l, tight, typography.$fonts, typography.$lineheights);
    padding: {
      right: calc(2rem - 3px);
      left: calc(2rem - 3px);
    }
  }
}

button.video-button {
  display: block;

  .video-button__pause {
    display: block;
  }

  .video-button__play {
    display: none;
  }

  &.video-button--paused {
    .video-button__pause {
      display: none;
    }

    .video-button__play {
      display: block;
    }
  }
}



