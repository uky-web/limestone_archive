//
// This stylesheet is for styles you want to include only when displaying demo
// styles for grids, animations, color swatches, etc.
// These styles will not be your production CSS.
//

@use 'includes/root-rhythm';
@use 'includes/color-functions';
@use 'tokens/typography';
@use 'tokens/_colors';
@use 'tokens/_color-schemes';
@import 'includes/design-variables';
@import 'includes/mixins/m_typography';
@import 'includes/fonts';
@import 'includes/math';

//sass-lint:disable no-ids
#sg-patterns {
  max-width: 100%;
}
//sass-lint:enable no-ids

.demo-animate {
  margin-bottom: 1em;
  padding: 1em;
  border-radius: 8px;
  background: color-functions.color(dark-gray);
  text-align: center;
  cursor: pointer;
}

.sg-colors {
  margin-left: 0;
  list-style: none;
  @include root-rhythm.css-grid-columns(map-get(root-rhythm.$rr-grids, 4-up));
}

.sg-colors__column {
  padding: root-rhythm.rr-grid-remainder(2px);
  border: 2px solid color-functions.color(light-gray);
  border-radius: 8px;
  overflow: hidden;
  @include root-rhythm.rr-font-compute(r, tight, typography.$fonts, typography.$lineheights);

  margin {
    top: root-rhythm.rr-gridbase(2);
    bottom: root-rhythm.rr-gridbase(2);
  }
}

.sg-colors pre {
  @include root-rhythm.rr-font-compute(xs, tight, typography.$fonts, typography.$lineheights);
  margin-bottom: root-rhythm.rr-gridbase();
}

.sg-swatch {
  display: block;
  height: root-rhythm.rr-gridbase(10);
  margin-bottom: root-rhythm.rr-gridbase();
  padding: root-rhythm.rr-grid-remainder(5px);
  border-radius: 5px;
}

@mixin show-color($color) {
  background-color: $color;

  &::before {
    $swatch-label-background: rgba(color-schemes.$black, .5);
    $swatch-label-foreground: color-schemes.$white;
    @if (brightness($color) > 50) {
      $swatch-label-background: rgba(color-schemes.$white, .5);
      $swatch-label-foreground: color-schemes.$black;
    }

    display: inline-block;
    padding: .5em;
    border-radius: 0 0 4px;
    background-color: $swatch-label-background;
    color: $swatch-label-foreground;
    font-size: 12px;
    font-weight: bold;
    content: '#{$color}';
  }
}

@each $name, $color in colors.$colors {
  .bg-#{""+$name} {
    @include show-color($color)
  }
}


.sg-pattern-example {
  overflow: hidden;
}

.sg-pattern {
  margin-bottom: root-rhythm.rr-gridbase(4);
}

.sg-pattern-head {
  @include root-rhythm.rr-font-compute(r, typography.$fonts, typography.$lineheights);
  padding: root-rhythm.rr-gridbase();
}

.sg-pattern-title {
  padding {
    top: root-rhythm.rr-gridbase(2);
    bottom: root-rhythm.rr-gridbase(2);
  }

  a {
    padding: 0;
    border-bottom-width: 0;
  }
}

.sg-pattern-extra {
  display: none;
}

.sg-image-grid {
  .sg-image-grid-tile {
    margin-bottom: 2rem;
  }

  @media screen and ( min-width: 44rem ) {
    display: flex;
    margin-right: -1rem;
    margin-left: -1rem;

    .sg-image-grid-tile {
      margin-right: 1rem;
      margin-bottom: 0;
      margin-left: 1rem;
    }
  }
}

body.layout-grid--on {
  @include root-rhythm.rr-grid-overlay;
}

.toggleGroup {
  position: absolute;
  top: 1rem;
  right: 1rem;
  z-index: 999;

  button {
    display: inline-block;

    padding: 2px 8px;
    border-radius: 8px;
    border-color: color-functions.color(wildcat-black);
    background-color: color-functions.color(wildcat-black);
    font-size: 12px;
    font-weight: bold;
    line-height: 1;
  }
}

.twig-include {
  position: relative;
}

.twig-include__label {
  display: none;

  position: absolute;
  top: 0;
  right: 1rem;
  color: color-functions.color(alert);
  z-index: 998;
}

body.twig-includes--on {
  .twig-include {
    border: 2px solid color-functions.color(alert);
  }

  .twig-include__label {
    display: block;
  }
}
