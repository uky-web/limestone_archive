COMMIT_MSG = 'CI BUILD'

init:
	mkdir -pvm 0700 $(HOME)/.ssh
	echo "$(SSH_PRIVATE_KEY)" > $(HOME)/.ssh/id_rsa-gitlab-ci
	chmod 0600 $(HOME)/.ssh/id_rsa-gitlab-ci

clone:
	git clone $(REMOTE_REPO) $(BUILD_REPO)
	rm -Rf dist/.git
	git config --global user.email "$(GITLAB_USER_EMAIL)"
	git config --global user.name "$(GITLAB_USER_NAME)"

	if [ `git -C $(BUILD_REPO) ls-remote --heads origin $(CI_COMMIT_REF_NAME) | wc -l` = 1 ]; then \
		echo Checking out existing branch $(CI_COMMIT_REF_NAME); \
		cd $(BUILD_REPO) && git checkout $(CI_COMMIT_REF_NAME); \
		cd $(BUILD_REPO) && git pull origin $(CI_COMMIT_REF_NAME); \
	else \
		echo "Creating new branch $(CI_COMMIT_REF_NAME)"; \
		cd $(BUILD_REPO) && git checkout -b $(CI_COMMIT_REF_NAME); \
	fi
	
replay:
	rsync -av --delete --exclude '.git/' dist/* $(BUILD_REPO)

push:

	cd $(BUILD_REPO) && git add * && git commit -am $(COMMIT_MSG)

	if [ `git -C $(BUILD_REPO) ls-remote --heads origin $(CI_COMMIT_REF_NAME) | wc -l` = 1 ]; then \
		echo "Pushing to the existing remote branch $(CI_COMMIT_REF_NAME)"; \
		cd $(BUILD_REPO) && git push origin $(CI_COMMIT_REF_NAME); \
 	else \
		echo "Pushing new branch $(CI_COMMIT_REF_NAME) to remote"; \
		cd $(BUILD_REPO) && git push -u origin $(CI_COMMIT_REF_NAME); \
	fi

